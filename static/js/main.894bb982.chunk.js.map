{"version":3,"sources":["components/header/header.tsx","components/header/nav.tsx","components/main/main.tsx","components/main/home.tsx","components/main/detail.tsx","components/main/quiz.tsx","components/main/login.tsx","components/footer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","className","window","location","hostname","Nav","to","Main","useState","flags","set_flags","const_flags","set_const_flags","option","set_option","search","set_search","abbrev","set_abbrev","React","useEffect","a","fetch","fetch_flags","json","data","country_short","forEach","item","obj","name","alpha3Code","push","get_flags","filter_handler","str_option","str_search","undefined","filter","flag","toLowerCase","includes","region","back_handler","path","search_handler","e","val","target","value","option_handler","str","continents","map","i","Home","props","type","id","placeholder","onKeyUp","continent","onClick","src","alt","Intl","NumberFormat","format","parseInt","population","capital","Detail","domain_length","topLevelDomain","length","currency_length","currencies","lang_length","languages","abbrev_list","subregion","domain","currency","lang","borders","Quiz","Login","Footer","moment","year","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.894bb982.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Nav } from \"./index\";\r\nimport \"./header.css\";\r\n\r\nexport const Header: React.FC = () => (\r\n  <header>\r\n    <div className=\"header container\">  \r\n      {window.location.hostname === \"localhost\" ? <Nav /> : \"\"}\r\n      {window.location.hostname === \"localhost\" ? <p>Light Mode</p> : \"\"}\r\n    </div>\r\n  </header>\r\n);","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Nav: React.FC = () => (\r\n    <nav>\r\n      <ul className=\"nav\">\r\n        <li className=\"nav_item\">\r\n          <Link className=\"nav_links\" to=\"/world_countries\">Home</Link>\r\n        </li>\r\n        <li className=\"nav_item\">\r\n          <Link className=\"nav_links\" to=\"/quiz\">Quiz</Link>\r\n        </li>\r\n        <li className=\"nav_item\">\r\n          <Link className=\"nav_links\" to=\"login\">Login</Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n);","import React, { useState } from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport { Home, Detail, Quiz, Login } from \"./\";\r\nimport { Nav } from \"../header\";\r\nimport \"./main.css\";\r\n\r\nexport const Main: React.FC = () => {\r\n  const [flags, set_flags] = useState([]);\r\n  const [const_flags, set_const_flags] = useState([]);\r\n  const [option, set_option] = useState(\"\");\r\n  const [search, set_search] = useState(\"\");\r\n  const [abbrev, set_abbrev] = useState([{}]);\r\n\r\n  const continents = [`Filter by Region`, `Americas`, `Africa`, `Asia`, `Europe`, `Oceania`, `Polar`];\r\n\r\n  React.useEffect(() => {\r\n    const get_flags = async () => {\r\n      const fetch_flags = await fetch(`https://restcountries.eu/rest/v2/all`);\r\n      const data = await fetch_flags.json();\r\n      const country_short: any[] = [];\r\n      data.forEach((item: any) => {\r\n        interface work { \"name\": string, \"abbrev\": string };\r\n        const obj: work = {\"name\": \"\", \"abbrev\": \"\"};\r\n        obj[\"name\"] = item.name;\r\n        obj[\"abbrev\"] = item.alpha3Code;\r\n        country_short.push(obj);\r\n      });\r\n      set_flags(data);\r\n      set_const_flags(data);\r\n      set_abbrev(country_short);\r\n    };\r\n    get_flags();\r\n  }, []);\r\n\r\n  const filter_handler = (str_option: string, str_search: string) => {\r\n    str_option = str_option === `Filter by Region` ? \"\" : str_option;\r\n    return( \r\n      (str_option === \"\" || str_option === undefined ) && (str_search === \"\" || str_search === undefined) ? const_flags : \r\n      const_flags.filter((flag: any) => (\r\n        flag.name.toLowerCase().includes(str_search)) && (flag.region.includes(str_option))\r\n      )\r\n    );\r\n  };\r\n\r\n  const search_handler = (e: any) => {\r\n    const val = e.target.value.toLowerCase();\r\n    set_search(val);\r\n    set_flags(filter_handler(option, val));\r\n  };\r\n\r\n  const option_handler = (str: string) => { \r\n    set_option(str);\r\n    set_flags(filter_handler(str, search));\r\n  }\r\n\r\n  const back_handler = () => {\r\n    set_flags(const_flags);\r\n  }\r\n\r\n  return(\r\n    <main>\r\n      <div className=\"container\"> \r\n        <h1 className=\"header_main\">Where in the world?</h1>\r\n        <Switch>    \r\n          <Route path=\"/quiz\">\r\n            <Quiz />\r\n          </Route>\r\n          <Route path=\"/login\">\r\n            <Login />\r\n          </Route>   \r\n          <Route path=\"/world_countries\">\r\n            <Home  \r\n              flags={flags}\r\n              search_handler={search_handler}\r\n              option_handler={option_handler}\r\n              continents={continents}\r\n            />\r\n          </Route>                  \r\n          {flags.map((flag: any, i:number) => (\r\n            <Route key={\"route_\" + i} path={\"/\" + flag.alpha3Code}>\r\n              <Detail \r\n                flag={flag}\r\n                abbrev={abbrev}\r\n                back_handler={back_handler}\r\n              />\r\n            </Route >\r\n            )\r\n          )}            \r\n        </Switch>\r\n      </div>\r\n    </main>\r\n  );\r\n};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\ninterface T{\r\n  search_handler:(e: any) => void,\r\n  option_handler:(str: string) => void,\r\n  flags: string[],\r\n  continents: string[]\r\n}\r\n\r\nexport const Home: React.FC <T> = props => (\r\n  <>\r\n    <section className=\"filter_section\">\r\n      <div className=\"search_container filter_container\">\r\n        <input \r\n          type=\"search\" \r\n          name=\"search\" \r\n          id=\"search\" \r\n          className=\"search\"\r\n          placeholder=\"Search for a country...\"\r\n          onKeyUp={props.search_handler}\r\n        />\r\n      </div>\r\n      <div className=\"continents_container filter_container\">\r\n        <select \r\n          name=\"continents\" \r\n          id=\"continents\"\r\n          className=\"continents\"\r\n        >\r\n          {props.continents.map((continent, i) => (\r\n            <option \r\n              key={i} \r\n              value={continent}\r\n              onClick={() => props.option_handler(continent)}\r\n              className=\"continent\"\r\n            >\r\n              {continent}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    </section>\r\n    <section className=\"flag_container\">\r\n      {props.flags.map((flag:any, i:any) => (\r\n          <NavLink to={\"/\" + flag.alpha3Code} key={\"flag_\" + i} className=\"flag_item\">\r\n            <img src={flag.flag} className=\"flag_image\" alt={\"The flag of \" + flag.name} /> \r\n            <div className=\"flag_content\">\r\n              <p className=\"country\">{flag.name}</p>\r\n              <div className=\"flag_detail_container\">\r\n                <p className=\"flag_detail population\">Population: {new Intl.NumberFormat().format(parseInt(flag.population))}</p>\r\n                <p className=\"flag_detail region\">Region: {flag.region}</p>\r\n                <p className=\"flag_detail capital\">Capital: {flag.capital}</p>\r\n              </div>\r\n            </div>\r\n          </NavLink>\r\n        )\r\n      )}\r\n    </section>\r\n  </>\r\n);","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface T{\r\n  flag: any,\r\n  abbrev: any,\r\n  back_handler: () => void\r\n}\r\n\r\nexport const Detail: React.FC <T> = props => {\r\n  const flag = props.flag;\r\n  const domain_length = flag.topLevelDomain.length;\r\n  const currency_length = flag.currencies.length;\r\n  const lang_length = flag.languages.length;\r\n  const abbrev_list = props.abbrev;\r\n\r\n  return (\r\n    <section className=\"detail_page\">\r\n      <Link \r\n        className=\"back_link block_text\" \r\n        to=\"/world_countries\"\r\n        onClick={props.back_handler}\r\n      >\r\n        &lt; Back\r\n      </Link>\r\n      <div className=\"detail_page_content\">\r\n        <div className=\"detail_page_container detail_image_container\">\r\n          <img src={flag.flag} className=\"flag_detail_image\" alt={\"The flag of \" + flag.name} /> \r\n        </div>\r\n        <div className=\"detail_page_container detail_info_container\">\r\n          <p className=\"country\">{flag.name}</p>\r\n          <div className=\"detail_info_content detail_info_top\">\r\n            <p className=\"flag_detail population\">Population: {new Intl.NumberFormat().format(parseInt(flag.population))}</p>\r\n            <p className=\"flag_detail region\">Region: {flag.region}</p>\r\n            <p className=\"flag_detail subregion\">Sub Region: {flag.subregion}</p>\r\n            <p className=\"flag_detail capital\">Capital: {flag.capital}</p>\r\n          </div>\r\n          <div className=\"detail_info_content detail_info_bottom\">\r\n            <p className=\"flag_detail domain\">Top Level Domain: {flag.topLevelDomain.map((domain:any, i:number) => domain + (domain_length === (i + 1) ? \"\" : \", \"))}</p>\r\n            <p className=\"flag_detail currencies\">Currencies: {flag.currencies.map((currency:any, i:number) => currency.name + (currency_length === (i + 1) ? \"\" : \", \"))}</p>\r\n            <p className=\"flag_detail languages\">Languages: {flag.languages.map((lang:any, i:number) => lang.name + (lang_length === (i + 1) ? \"\" : \", \"))}</p>\r\n          </div>\r\n          <p className=\"flag_detail border_header\">Bordering Countries: {flag.borders.length === 0 ? \"None\" : \"\"}</p>\r\n          {abbrev_list.map((abbrev:any, i:number) => flag.borders.includes(abbrev.abbrev) ? <p className=\"border block_text\" key={\"border_\" + i}>{abbrev.name}</p> : \"\")}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n};","import React from 'react'\r\n\r\nexport const Quiz = () => (\r\n  <section className=\"quiz\">\r\n    Quiz\r\n  </section>\r\n)\r\n","import React from 'react'\r\n\r\nexport const Login = () => (\r\n  <section className=\"login\">\r\n    Login\r\n  </section>\r\n)\r\n\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\n\r\nexport const Footer: React.FC = () => (\r\n  <footer>\r\n    <div className=\"container\">\r\n      <p>&copy; {moment().year()} DeMarc Johnson</p>\r\n    </div>\r\n  </footer>\r\n);","import React from 'react';\r\nimport './App.css';\r\nimport { Header } from \"./components/header\";\r\nimport { Main } from \"./components/main\"\r\nimport { Footer } from \"./components\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Header />\r\n      <Main />\r\n      <Footer />\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}